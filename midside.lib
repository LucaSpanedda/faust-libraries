//------------------------------------------------------------------------------
// LR TO MID MATRIX
//------------------------------------------------------------------------------
// Converts an LR stereo image into Mid mono signal describes the frontal
// directional component of the sound image.
//
// #### Reference
//
// #### Usage
//
// ```
// _,_ : mid : _
// ```
//
// Where the two inputs are respectively:
// L,R
//
// Where the output is the Mid component
//
//------------------------------------------------------------------------------
mid(L,R) = 0.707*(L+R);

//------------------------------------------------------------------------------
// LR TO SIDE MATRIX
//------------------------------------------------------------------------------
// Converts an LR stereo image into Side mono signal describes the lateral
// bidirectional component of the sound image.
//
// #### Reference
//
// #### Usage
//
// ```
// _,_ : side : _
// ```
//
// Where the two inputs are respectively:
// L,R
//
// Where the output is the Side component
//
//------------------------------------------------------------------------------
side(L,R) = 0.707*(L-R);

//------------------------------------------------------------------------------
// LR TO MID SIDE MATRIX
//------------------------------------------------------------------------------
// Converts a LR Stereo image into Mid-Side Stereo
//
// #### Reference
//
// #### Usage
//
// ```
// _,_ : lr2ms : _,_
// ```
//
// Where the two inputs are respectively:
// L,R
//
// Where the two outputs are respectively:
// Mid, Side
//
//------------------------------------------------------------------------------
lr2ms(L,R) = mid(L,R), side(L,R);

//------------------------------------------------------------------------------
// MID-SIDE TO L MATRIX
//------------------------------------------------------------------------------
// Converts an MidSide stereo image into Left mono signal.
//
// #### Reference
//
// #### Usage
//
// ```
// _,_ : left : _
// ```
//
// Where the two inputs are respectively:
// M,S
//
// Where the output is the Left component
//
//------------------------------------------------------------------------------
left(M,S) = 0.707*(M+S);

//------------------------------------------------------------------------------
// MID-SIDE TO R MATRIX
//------------------------------------------------------------------------------
// Converts an MidSide stereo image into Left mono signal.
//
// #### Reference
//
// #### Usage
//
// ```
// _,_ : right : _
// ```
//
// Where the two inputs are respectively:
// M,S
//
// Where the output is the Right component
//
//------------------------------------------------------------------------------
right(M,S) = 0.707*(M-S);

//------------------------------------------------------------------------------
// LR TO MID SIDE MATRIX
//------------------------------------------------------------------------------
// Converts a LR Stereo image into Mid-Side Stereo
//
// #### Reference
//
// #### Usage
//
// ```
// _,_ : lr2ms : _,_
// ```
//
// Where the two inputs are respectively:
// L,R
//
// Where the two outputs are respectively:
// Mid, Side
//
//------------------------------------------------------------------------------
ms2lr(M,S) = left(M,S), right(M,S);

//------------------------------------------------------------------------------
// MIDSIDE PANNER
//------------------------------------------------------------------------------
// Mid-Side panpot with phase inntegrity of components
//
// #### Reference
//
// #### Usage
//
// ```
// _ : mspan : _,_
// ```
//
// Where the input is the mono signal to be panned
//
// Where the two outputs are respectively:
// Mid, Side
//
//------------------------------------------------------------------------------
mspan(x) = m, s
  with{
    pot = vslider("[01] Azimuth [style:knob]", 0, -180, 180, 0.1) : deg2rad : si.smoo;
    m = (0.5 * x) + (0.5 * (x * cos(pot)));
    s = x *(sin(-pot));
};
